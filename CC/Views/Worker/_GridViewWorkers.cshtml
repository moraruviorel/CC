@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "Worker", Action = "GridViewWorkers" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Worker", Action = "GridViewWorkersAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Worker", Action = "GridViewWorkersUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Worker", Action = "GridViewWorkersDelete" };
        settings.SettingsPager.PageSize = CC.Models.Classes.MySession.Current.MySetting.GridRows;
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add(c =>
        {
            c.FieldName = "first_name";
            c.Caption = "Prenume";
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "last_name";
            c.Caption = "Nume";
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "address";
            c.Caption = "Adresa";
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "phone_number";
            c.Caption = "Telefon";
        });
        //
        settings.Columns.Add(c =>
        {
            c.FieldName = "contract_type_id";
            c.Caption = "Tip contract";
            c.EditorProperties().ComboBox(p =>
            {
                p.TextField = "name";
                p.ValueField = "Id";
                p.ValueType = typeof(int);
                p.DataSource = ViewBag.ContractTypes;
            });
        });

        //Detalii
        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(delegate (GridViewDataItemTemplateContainer c)
            {
                int documentId = (int)DataBinder.Eval(c.DataItem, "Id");

                if (documentId != -1)
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("Detalii", "WorkerDetail", "Worker", new { workerId = (int)DataBinder.Eval(c.DataItem, "Id") }, new { }).ToHtmlString()
                    );
                }
            });
        });
        //
        /*settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(delegate (GridViewDataItemTemplateContainer c)
            {
                int documentId = (int)DataBinder.Eval(c.DataItem, "Id");

                if (documentId != -1)
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("DetailTest", "WorkerDetailTest", "Home", new { workerId = (int)DataBinder.Eval(c.DataItem, "Id") }, new { }).ToHtmlString()
                    );
                }
            });
        });*/
        
    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()