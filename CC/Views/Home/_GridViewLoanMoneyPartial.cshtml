@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridViewLoanMoney";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewLoanMoneyPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Home", Action = "GridViewLoanMoneyPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Home", Action = "GridViewLoanMoneyPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Home", Action = "GridViewLoanMoneyPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        //settings.Columns.Add("id");
        settings.Columns.Add(c =>
        {
            c.FieldName = "person_name";
            c.Caption = "Nume Persoană";
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "description";
            c.Caption = "Detalii împrumut";
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "loan_date";
            c.Caption = "Data împrumutului";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.PropertiesEdit.DisplayFormatString = CC.Models.Const.DateTimeFormat;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "return_date";
            c.Caption = "Data returnării";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.PropertiesEdit.DisplayFormatString = CC.Models.Const.DateTimeFormat;
        });
        //settings.Columns.Add("user_id");
        settings.Columns.Add(c =>
        {
            c.FieldName = "loan_sum";
            c.Caption = "Suma împrumutului";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "currency_id";
            column.Caption = "Valuta";
            column.Width = 20;
            column.EditorProperties().ComboBox(p =>
            {
                p.TextField = "name";
                p.ValueField = "id";
                p.ValueType = typeof(int);
                p.DataSource = Model.CurrencyList;
            });
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "loan_status";
            c.Caption = "Dat cu împrumut";
            c.ColumnType = MVCxGridViewColumnType.CheckBox;
            c.Width = 50;
        });
        //Detalii
        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(delegate (GridViewDataItemTemplateContainer c)
            {
                int documentId = (int)DataBinder.Eval(c.DataItem, "Id");

                if (documentId != -1)
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("Detalii", "LoanMoneyDetails", "Home", 
                        new { loanMoneyId = (int)DataBinder.Eval(c.DataItem, "Id") }, new { }).ToHtmlString()
                    );
                }
            });
        });

    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model.LoanMoneyList).GetHtml()