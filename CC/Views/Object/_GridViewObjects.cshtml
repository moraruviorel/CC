@using CC.Models.BusinessLogic.Home
@using CC.Models.Classes
@using CC.Models.Enums
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView1";
        settings.CallbackRouteValues = new { Controller = "Object", Action = "GridViewObjects" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Object", Action = "GridViewObjectsAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Object", Action = "GridViewObjectsUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Object", Action = "GridViewObjectsDelete" };
        settings.SettingsPager.PageSize = MySession.Current.MySetting.GridRows;
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = Model.UserPermissionObject.can_add ?? false;
        settings.CommandColumn.ShowDeleteButton = Model.UserPermissionObject.can_delete ?? false;
        settings.CommandColumn.ShowEditButton = Model.UserPermissionObject.can_edit ?? false;

        settings.KeyFieldName = "ID";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add(c =>
        {
            c.FieldName = "Location";
            c.Caption = "Localitatea";
            c.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "Address";
            c.Caption = "Adresa";
            c.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "Description";
            c.Caption = "Descrierea";
            c.ColumnType = MVCxGridViewColumnType.TextBox;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "UserId";
            c.Caption = "Utilizator";
            c.ColumnType = MVCxGridViewColumnType.TextBox;
            c.Visible = false;
        });

        if (MySession.Current.ObjectId != 0)
        {
            settings.Columns.Add(column =>
            {
                column.FieldName = "Parent_Id";
                column.Caption = "Obiect Părinte";

                column.EditorProperties().ComboBox(p =>
                {
                    p.TextField = "Address";
                    p.ValueField = "ID";
                    p.ValueType = typeof(int);
                    p.DataSource = Model.ObjectParentList;
                });
            });
        }
        //Detalii
        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(delegate (GridViewDataItemTemplateContainer c)
            {
                int documentId = (int)DataBinder.Eval(c.DataItem, "Id");

                if (documentId != -1)
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink(
                            TranslateWord.GetWord(CC.Resources.Resource.Details), 
                            "ObjectDetail", 
                            Controllers.Object.ToString(), 
                            new { objectId = (int)DataBinder.Eval(c.DataItem, "Id") }, new { }).ToHtmlString()
                    );
                }
            });
        });
        //Obiecte
        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(c =>
                ViewContext.Writer.Write(
                    Html.ActionLink(
                        TranslateWord.GetWord(ModuleTypes.Objects.ToString()),
                        ModuleTypes.Objects.ToString(),
                        Controllers.Object.ToString(),
                        new {objectId = (int) DataBinder.Eval(c.DataItem, "Id")}, new {}).ToHtmlString()
                    )
            );

        });



    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model.ObjectList).GetHtml()